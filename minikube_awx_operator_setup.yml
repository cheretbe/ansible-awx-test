---
- name: Deploy minikube and awx-operator
  hosts: localhost

  tasks:
    - name: Install apt packages
      ansible.builtin.apt:
        name: ["curl", "wget", "git", "make", "docker.io", "python3-pip"]
      become: yes

    - name: Install PIP packages
      ansible.builtin.pip:
        name: kubernetes
        extra_args: --user

    - name: Add user 'vagrant' to 'docker' group
      ansible.builtin.user:
        name: vagrant
        groups: docker
        append: yes
      become: yes

    - name: Download latest Minikube
      ansible.builtin.get_url:
        url: https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
        dest: /usr/local/bin/minikube
        owner: root
        group: root
        mode: 0755
      become: yes

    - name: Get latest version of Kubectl
      uri:
        url: https://storage.googleapis.com/kubernetes-release/release/stable.txt
        return_content: yes
      register: kubectl_version

    - name: Download Kubectl
      ansible.builtin.get_url:
        url: https://storage.googleapis.com/kubernetes-release/release/{{ kubectl_version.content }}/bin/linux/amd64/kubectl
        dest: /usr/local/bin/kubectl
        owner: root
        group: root
        mode: 0755
      become: yes

    - name: Check out awx-operator git repo
      ansible.builtin.git:
        repo: "https://github.com/ansible/awx-operator.git"
        dest: "/home/vagrant/awx-operator"
        version: "0.21.0"
        force: yes # 'make deploy' modifies config/manager/kustomization.yaml :|

    - name: Populate service facts
      service_facts:
      become: yes

    - name: Check if 'minikube' service is present
      set_fact:
        minikube_service_is_present: "{{ True if ('minikube.service' in ansible_facts.services) else False }}"

    - name: Create 'minikube' systemd service unit file
      copy:
        content: |
          # Generated by Ansible at {{ lookup('pipe', 'hostname -f') }}
          # Any changes made here will be overwritten
          [Unit]
          Description=Minikube - a local Kubernetes cluster

          [Service]
          Type=oneshot
          RemainAfterExit=yes
          User=vagrant
          Group=vagrant
          WorkingDirectory=/home/vagrant
          # ExecStart=/usr/local/bin/minikube start --mount --mount-string "/home/vagrant/awx-operator:/awx" --addons=ingress
          ExecStart=/usr/local/bin/minikube start
          ExecStop=/usr/local/bin/minikube stop

          [Install]
          WantedBy=multi-user.target
        dest: /etc/systemd/system/minikube.service
        owner: root
        group: root
        mode: 0644
      become: yes
      when: not minikube_service_is_present

    - name: Enable and start 'minikube' service
      ansible.builtin.systemd:
        name: "minikube.service"
        state: started
        enabled: yes
      become: yes

    - name: Get awx-operator pods info
      kubernetes.core.k8s_info:
        kind: Pod
        namespace: awx
        label_selectors:
          - control-plane = controller-manager
      register: awx_operator_pods_info

    - name: Deploy awx-operator
      ansible.builtin.make:
        chdir: /home/vagrant/awx-operator
        target: deploy
      when: (awx_operator_pods_info.resources | count) == 0

    - name: Wait for awx-operator pods to become ready
      command: "kubectl wait --namespace=awx --for=condition=Ready pods --selector control-plane=controller-manager --timeout=600s"
      changed_when: false
